{"version":3,"sources":["components/Header.js","components/MemeGenerator.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["MyHeader","className","Component","MyMeme","handleChange","event","target","name","value","setState","handleClick","myArray","state","allMemeImgs","data","memes","randomImg","Math","floor","random","length","url","topText","bottomText","fetch","then","response","json","style","border","marginBottom","textAlign","this","src","type","placeholder","onChange","onClick","MyFooter","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAceA,E,4JATb,WACE,OACE,8BACE,oBAAIC,UAAU,gBAAd,qC,GAJeC,a,OC4ERC,E,kDA3Eb,aAAe,IAAD,8BACZ,gBAkBFC,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,OAAtBC,EADgB,EAChBA,KAAMC,EADU,EACVA,MACd,EAAKC,SAAL,eAAiBF,EAAOC,KArBZ,EAwBdE,YAAc,WACZ,IAAMC,EAAU,EAAKC,MAAMC,YAAYC,KAAKC,MAC5C,EAAKN,SAAS,CACZO,UAAWL,EAAQM,KAAKC,MAAMD,KAAKE,SAAWR,EAAQS,SAASC,OAzBjE,EAAKT,MAAQ,CACXU,QAAS,GACTC,WAAY,GACZP,UAAW,gCACXH,YAAa,IANH,E,qDAUd,WAAqB,IAAD,OAElBW,MAAM,qCACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACX,GACL,EAAKL,SAAS,CAAEI,YAAaC,S,oBAgBnC,WACE,OACE,qBAAKb,UAAU,aAAf,SACE,sBAAKA,UAAU,uBAAf,UACE,sBACE2B,MAAO,CACLC,OAAQ,kBACRC,aAAc,MACdC,UAAW,UAJf,UAOE,oBAAIH,MAAO,CAAEG,UAAW,UAAxB,SAAqCC,KAAKpB,MAAMU,UAChD,qBAAKW,IAAKD,KAAKpB,MAAMI,YACrB,oBAAIY,MAAO,CAAEG,UAAW,UAAxB,SAAqCC,KAAKpB,MAAMW,gBAElD,sBAAKtB,UAAU,cAAf,UACE,uBACEA,UAAU,eACViC,KAAK,OACL1B,MAAOwB,KAAKpB,MAAMU,QAClBf,KAAK,UACL4B,YAAY,WACZC,SAAUJ,KAAK5B,eAEjB,uBACA,uBACEH,UAAU,eACViC,KAAK,OACL1B,MAAOwB,KAAKpB,MAAMW,WAClBhB,KAAK,aACL4B,YAAY,cACZC,SAAUJ,KAAK5B,eAEjB,uBACA,wBAAQH,UAAU,WAAWoC,QAASL,KAAKtB,YAA3C,uC,GAlESR,aCYNoC,E,4JAXb,WACE,OACE,wBAAQrC,UAAU,WAAlB,SACE,mBAAGA,UAAU,OAAb,6E,GAJeC,aCoBRqC,E,kDAfb,aAAe,IAAD,8BACZ,gBACK3B,MAAQ,GAFD,E,0CAId,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,W,GAVUV,aCIHsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7f408d32.chunk.js","sourcesContent":["/** @format */\n\nimport React, { Component } from \"react\";\n\nclass MyHeader extends Component {\n  render() {\n    return (\n      <div>\n        <h1 className=\"myheader meme\">My Meme Generator</h1>\n      </div>\n    );\n  }\n}\n\nexport default MyHeader;\n","/** @format */\n\nimport React, { Component } from \"react\";\n\nclass MyMeme extends Component {\n  constructor() {\n    super();\n    this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImg: \"http://i.imgflip.com/1bij.jpg\",\n      allMemeImgs: [],\n    };\n  }\n\n  componentDidMount() {\n    //ensure that data is fetched at the beginning\n    fetch(\"https://api.imgflip.com/get_memes\") //call to URL\n      .then((response) => response.json()) //turn promise into JS object\n      .then((data) => {\n        this.setState({ allMemeImgs: data }); // set allMemeImgs state\n      });\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleClick = () => {\n    const myArray = this.state.allMemeImgs.data.memes;\n    this.setState({\n      randomImg: myArray[Math.floor(Math.random() * myArray.length)].url,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"row mymeme\">\n        <div className=\"col-md-6 offset-md-3\">\n          <div\n            style={{\n              border: \"3px solid black\",\n              marginBottom: \"3em\",\n              textAlign: \"center\",\n            }}\n          >\n            <h1 style={{ textAlign: \"center\" }}>{this.state.topText}</h1>\n            <img src={this.state.randomImg} />\n            <h1 style={{ textAlign: \"center\" }}>{this.state.bottomText}</h1>\n          </div>\n          <div className=\"text-center\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              value={this.state.topText}\n              name=\"topText\"\n              placeholder=\"Top text\"\n              onChange={this.handleChange}\n            />\n            <br />\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              value={this.state.bottomText}\n              name=\"bottomText\"\n              placeholder=\"Bottom Text\"\n              onChange={this.handleChange}\n            />\n            <br />\n            <button className=\"mybutton\" onClick={this.handleClick}>\n              Generate Meme\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MyMeme;\n","/** @format */\n\nimport React, { Component } from \"react\";\n\nclass MyFooter extends Component {\n  render() {\n    return (\n      <footer className=\"myfooter\">\n        <p className=\"foot\">\n          Â© 2021. All Rights reserved | Design by Justice Towett\n        </p>\n      </footer>\n    );\n  }\n}\n\nexport default MyFooter;\n","/** @format */\n\nimport React, { Component } from \"react\";\nimport \"./css/style.css\";\nimport MyHeader from \"./components/Header\";\nimport MyMeme from \"./components/MemeGenerator\";\nimport MyFooter from \"./components/Footer\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n  render() {\n    return (\n      <div>\n        <MyHeader />\n        <MyMeme />\n        <MyFooter />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}